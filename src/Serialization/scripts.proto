syntax = "proto3";
package serial;

import public "internals.proto";

message View {
  Vector2f center = 1;
  Vector2f size = 2;
}

message SpriteSheet {
  message SpriteSheetEntry {
    string name = 1;
    int32 row = 2;
    int32 start = 3;
    int32 end = 4;
  }
  string image_name = 1;
  Vector2i frame_size = 2;
  repeated SpriteSheetEntry anim = 3;
}

message CollisionMap {
  message CollisionMapEntry {
    message FixtureDefList {
      repeated FixtureDef fixture_def = 1;
    }
    string name = 1;
    repeated FixtureDefList fixture_def_list = 2;
  }
  repeated CollisionMapEntry collision_map_entry = 1;
}

message Animation {
  SpriteSheet spritesheet = 1;
}

message RigidBodyAnimation {
  SpriteSheet spritesheet = 1;
  CollisionMap collision_map = 2;
}

message PlayerAnimation {
  RigidBodyAnimation animation = 1;
}
message ExampleCameraScript {
  uint64 map_guid = 1;
  uint64 tracked_object_guid = 2;
}
message ExampleClockedScript {}
message ReloadSceneScript {}
message CameraScript {
  View view = 1;
}
message ButtonScript {
  // no comment....
  // but actually, callback functions in scripts might be illegal
  // because they're impossible(?) to serialize
  // possible solutions:
  //    subclassing
  //    some common button actions might be serializable, should look into it
}
message ExampleScript {}
message StraightWeaponScript {
  double deviance = 1;
}
message BulletScript {
  Vector2f from = 1;
  float rotation = 2;
  float speed = 3;
}
message NetworkPlayerScript {
  // probably this script's gonna be rewritten/deleted soon
  // so i'll just ignore it lol
}
message CursorAnimation {
  Animation animation = 1;
}

message NetworkManagerClientScript {
  uint32 ip = 1;
  uint32 port = 2;
}

message NetworkManagerServerScript { }

message PlayerControlledBoxClient {
  uint64 nw_manager_script_guid = 2;
}

message PlayerControlledBoxServer { }

message HealthBar { }

message HealthBarHolder { }

// do we *need* to serialize this?
// this seem to be only created in runtime...
// we really should have prefabs already;;;
message GrenadeScript { }

message WeaponStorage {
  repeated uint64 weapon_guid = 1;
}

message WeaponGenerator { }
